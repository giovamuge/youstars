// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders GridList component 1`] = `
<RCTScrollView
  data={
    [
      [
        {
          "name": "test 1",
        },
        {
          "name": "test 2",
        },
      ],
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  removeClippedSubviews={false}
  renderItem={[Function]}
  scrollEventThrottle={0.0001}
  stickyHeaderIndices={[]}
  viewabilityConfigCallbackPairs={[]}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          [
            {
              "display": "flex",
              "flexDirection": "row",
              "flexWrap": "wrap",
            },
            {
              "flex": 2,
            },
          ]
        }
      >
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <Text>
            test 1
          </Text>
        </View>
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <Text>
            test 2
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders Home page 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
  style={
    [
      {
        "backgroundColor": "#FFFFFF",
      },
    ]
  }
>
  <RCTScrollView
    style={
      {
        "height": "100%",
        "paddingHorizontal": 20,
        "paddingTop": 20,
        "width": "100%",
      }
    }
  >
    <View>
      <Text
        style={
          [
            {
              "flexWrap": "wrap",
              "fontSize": 50,
              "fontWeight": "bold",
              "lineHeight": 45,
              "shadowColor": "#CCFF66",
              "shadowOffset": {
                "height": 3,
                "width": 3,
              },
              "shadowOpacity": 1,
              "shadowRadius": 0,
            },
            {
              "marginBottom": 15,
            },
          ]
        }
      >
        Wich stars would you know?
      </Text>
      <View
        style={
          {
            "flexDirection": "column",
            "gap": 7,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
              "fontWeight": "700",
              "lineHeight": 24,
              "shadowColor": "#CCFF66",
              "shadowOffset": {
                "height": 3,
                "width": 3,
              },
              "shadowOpacity": 1,
              "shadowRadius": 0,
            }
          }
        >
          Owner
        </Text>
        <View
          style={
            {
              "marginBottom": 20,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "backgroundColor": "#CCFF66",
                "justifyContent": "center",
                "marginBottom": 5,
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#000000",
                  "borderWidth": 3,
                  "height": 50,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "padding": 20,
                  "width": "100%",
                }
              }
            >
              <TextInput
                autoCapitalize="none"
                autoCorrect={false}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="meta"
                placeholderTextColor="#A8A8A8"
                secureTextEntry={false}
                selectionColor="#CCFF66"
                style={
                  {
                    "color": "#000000",
                    "height": 50,
                    "width": "100%",
                  }
                }
                value=""
              />
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "flexDirection": "column",
            "gap": 7,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
              "fontWeight": "700",
              "lineHeight": 24,
              "shadowColor": "#CCFF66",
              "shadowOffset": {
                "height": 3,
                "width": 3,
              },
              "shadowOpacity": 1,
              "shadowRadius": 0,
            }
          }
        >
          Repository
        </Text>
        <View
          style={
            {
              "marginBottom": 20,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "backgroundColor": "#CCFF66",
                "justifyContent": "center",
                "marginBottom": 5,
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#000000",
                  "borderWidth": 3,
                  "height": 50,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "padding": 20,
                  "width": "100%",
                }
              }
            >
              <TextInput
                autoCapitalize="none"
                autoCorrect={false}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="react-native"
                placeholderTextColor="#A8A8A8"
                secureTextEntry={false}
                selectionColor="#CCFF66"
                style={
                  {
                    "color": "#000000",
                    "height": 50,
                    "width": "100%",
                  }
                }
                value=""
              />
            </View>
          </View>
        </View>
      </View>
      <Text
        style={
          [
            {
              "fontSize": 13,
              "fontWeight": "500",
              "lineHeight": 15.6,
              "shadowColor": "#CCFF66",
              "shadowOffset": {
                "height": 3,
                "width": 3,
              },
              "shadowOpacity": 1,
              "shadowRadius": 0,
            },
            {
              "marginBottom": 15,
              "textAlign": "center",
              "width": "100%",
            },
          ]
        }
      >
        alternatively
      </Text>
      <View
        style={
          {
            "flexDirection": "column",
            "gap": 7,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 20,
              "fontWeight": "700",
              "lineHeight": 24,
              "shadowColor": "#CCFF66",
              "shadowOffset": {
                "height": 3,
                "width": 3,
              },
              "shadowOpacity": 1,
              "shadowRadius": 0,
            }
          }
        >
          Url repository
        </Text>
        <View
          style={
            {
              "marginBottom": 20,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "backgroundColor": "#CCFF66",
                "justifyContent": "center",
                "marginBottom": 5,
                "width": "100%",
              }
            }
          >
            <View
              collapsable={false}
              style={
                {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#000000",
                  "borderWidth": 3,
                  "height": 50,
                  "justifyContent": "center",
                  "marginBottom": 0,
                  "padding": 20,
                  "width": "100%",
                }
              }
            >
              <TextInput
                autoCapitalize="none"
                autoCorrect={false}
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder="http://github.com/meta/react-native"
                placeholderTextColor="#A8A8A8"
                secureTextEntry={false}
                selectionColor="#CCFF66"
                style={
                  {
                    "color": "#000000",
                    "height": 50,
                    "width": "100%",
                  }
                }
                value=""
              />
            </View>
          </View>
        </View>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            [
              {
                "alignSelf": "flex-start",
                "borderColor": "#000000",
                "borderWidth": 3,
                "width": "100%",
              },
              undefined,
              {
                "backgroundColor": "#EBEBEB",
                "borderColor": "#A8A8A8",
              },
            ]
          }
        >
          <Text
            style={
              [
                {
                  "fontSize": 15,
                  "fontWeight": "bold",
                  "marginHorizontal": 48,
                  "marginVertical": 12,
                  "textAlign": "center",
                },
                {
                  "color": "#A8A8A8",
                },
              ]
            }
          >
            Search
          </Text>
        </View>
        <View
          collapsable={false}
          style={
            {
              "marginLeft": 7,
              "marginTop": 7,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;

exports[`renders StarGazers page 1`] = `
<View
  style={
    {
      "backgroundColor": "#CCFF66",
      "flex": 1,
      "height": "100%",
      "paddingVertical": 50,
      "width": "100%",
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    ListFooterComponent={[Function]}
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={0.2}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
            "marginVertical": 10,
          }
        }
      >
        <Text
          style={
            {
              "fontSize": 13,
              "fontWeight": "700",
              "lineHeight": 15.6,
              "shadowColor": "#CCFF66",
              "shadowOffset": {
                "height": 3,
                "width": 3,
              },
              "shadowOpacity": 1,
              "shadowRadius": 0,
            }
          }
        >
          There are no stars in the set parameters
        </Text>
      </View>
      <View
        onLayout={[Function]}
      >
        <View
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "marginVertical": 10,
            }
          }
        />
      </View>
    </View>
  </RCTScrollView>
</View>
`;
